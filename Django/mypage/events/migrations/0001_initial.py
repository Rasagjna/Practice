# Generated by Django 4.1.1 on 2023-03-03 10:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('user_name', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_name', models.CharField(default='ANU', max_length=150)),
                ('mobile', models.CharField(max_length=10)),
                ('designation', models.CharField(default='Engineer', max_length=200)),
                ('bu', models.CharField(max_length=250, null=True)),
                ('role', models.CharField(default='user', max_length=150)),
                ('base_location', models.CharField(default='none', max_length=150)),
                ('blood_group', models.CharField(blank=True, max_length=10, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='uploads/images')),
                ('gender', models.CharField(blank=True, default='Null', max_length=30, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Donations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donationTo', models.CharField(max_length=150)),
                ('minAmount', models.FloatField(max_length=150)),
                ('totalAmount', models.FloatField(max_length=150)),
                ('startDate', models.DateTimeField()),
                ('endDate', models.DateTimeField()),
                ('poster', models.ImageField(blank=True, null=True, upload_to='uploads/images')),
                ('donationDetails', models.FileField(upload_to='uploads/files')),
                ('wellnessType', models.CharField(default='social wellness', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeWellness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ewName', models.CharField(max_length=150)),
                ('wellnessType', models.CharField(default='employee wellness', max_length=150)),
                ('EWDetails', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventName', models.CharField(max_length=150)),
                ('startDate', models.DateTimeField()),
                ('endDate', models.DateTimeField()),
                ('venue', models.CharField(max_length=150)),
                ('poster', models.ImageField(blank=True, null=True, upload_to='uploads/images')),
                ('adminEmpId', models.IntegerField(default=123)),
                ('baselocation', models.CharField(max_length=150)),
                ('theme', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='EventTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventType', models.CharField(default='NoNe', max_length=150)),
                ('events', models.ManyToManyField(related_name='events', to='events.events')),
            ],
        ),
        migrations.CreateModel(
            name='ExampleFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, upload_to='uploads/images')),
            ],
        ),
        migrations.CreateModel(
            name='Sports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sportName', models.CharField(max_length=150)),
                ('sportType', models.CharField(max_length=150)),
                ('team', models.BooleanField()),
                ('sportsDetails', models.TextField(default='Enter details about sports')),
                ('teamSize', models.IntegerField()),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.events')),
                ('eventType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.eventtypes')),
            ],
        ),
        migrations.CreateModel(
            name='Workshops',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workshopName', models.CharField(max_length=150)),
                ('objectives', models.CharField(max_length=150)),
                ('contentDetails', models.TextField()),
                ('requirements', models.CharField(max_length=150)),
                ('instructorId', models.IntegerField()),
                ('poster', models.ImageField(blank=True, null=True, upload_to='uploads/images')),
                ('startDate', models.DateTimeField()),
                ('endDate', models.DateTimeField()),
                ('venue', models.CharField(max_length=150)),
                ('prerequisites', models.CharField(max_length=150)),
                ('instructorName', models.CharField(max_length=150)),
                ('experience', models.IntegerField()),
                ('skills', models.TextField()),
                ('instructorDesignation', models.CharField(default='Software Engineer', max_length=150)),
                ('instructorProfilepic', models.ImageField(blank=True, null=True, upload_to='uploads/images')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.events')),
                ('eventType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.eventtypes')),
            ],
        ),
        migrations.CreateModel(
            name='UserDonation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('empId', models.IntegerField()),
                ('donatedAmount', models.FloatField(max_length=150)),
                ('donation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.donations')),
            ],
        ),
        migrations.CreateModel(
            name='TimeLines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateTimeField()),
                ('endDate', models.DateTimeField()),
                ('venue', models.CharField(max_length=150)),
                ('poster', models.ImageField(blank=True, null=True, upload_to='uploads/images')),
                ('employeeWellness', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.employeewellness')),
                ('sports', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.sports')),
            ],
        ),
        migrations.CreateModel(
            name='Organizers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
                ('empId', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('eventId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.events')),
            ],
        ),
        migrations.CreateModel(
            name='Hackathon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hackathon_name', models.CharField(max_length=150)),
                ('startDate', models.DateTimeField()),
                ('endDate', models.DateTimeField()),
                ('poster', models.ImageField(blank=True, null=True, upload_to='uploads/images')),
                ('hackathon_details', models.TextField(default='Details about Hackathon')),
                ('venue', models.CharField(max_length=150)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.events')),
                ('eventType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.eventtypes')),
            ],
        ),
        migrations.AddField(
            model_name='employeewellness',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.events'),
        ),
        migrations.AddField(
            model_name='employeewellness',
            name='eventType',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.eventtypes'),
        ),
        migrations.AddField(
            model_name='donations',
            name='Socialwellness',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.eventtypes'),
        ),
        migrations.CreateModel(
            name='Arts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artName', models.CharField(max_length=150)),
                ('artType', models.CharField(max_length=150)),
                ('theme', models.CharField(max_length=150)),
                ('arts_details', models.TextField(default='Details about Arts')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.events')),
                ('eventType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.eventtypes')),
            ],
        ),
    ]
